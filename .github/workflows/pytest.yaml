name: pytest
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true
on:  # yamllint disable-line rule:truthy
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * 1'

jobs:
  pytest:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        python-version: ["3.10", "3.11", "3.12"]
    name: ${{ matrix.os }} - py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install liblsl (linux)
        if: ${{ matrix.os == 'ubuntu' }}
        run: |
          curl -L https://github.com/sccn/liblsl/releases/download/v1.16.2/liblsl-1.16.2-jammy_amd64.deb -o liblsl-1.16.2-jammy_amd64.deb
          sudo apt update
          sudo apt install -y libpugixml-dev qtbase5-dev qt5-qmake
          sudo apt install -y ./liblsl-1.16.2-jammy_amd64.deb
      - name: Install liblsl (macOS)
        if: ${{ matrix.os == 'macos' }}
        run: |
          curl -L https://github.com/sccn/liblsl/releases/download/v1.16.0/liblsl-1.16.0-OSX_arm64.tar.bz2 -o liblsl-1.16.0-OSX_arm64.tar.bz2
          tar -xf liblsl-1.16.0-OSX_arm64.tar.bz2
          mv lib/liblsl.1.16.0.dylib .
          echo "MNE_LSL_LIB=$PWD/liblsl.1.16.0.dylib" >> $GITHUB_ENV
          rm -R lib include bin
          rm liblsl-1.16.0-OSX_arm64.tar.bz2
      - name: Install liblsl (windows)
        if: ${{ matrix.os == 'windows' }}
        run: |
          curl -L https://github.com/sccn/liblsl/releases/download/v1.16.2/liblsl-1.16.2-Win_amd64.zip -o liblsl-1.16.2-Win_amd64.zip
          7z x -oliblsl liblsl-1.16.2-Win_amd64.zip
          echo "MNE_LSL_LIB=$PWD/liblsl/bin/lsl.dll" >> $GITHUB_ENV
      - name: Setup headless display
        uses: pyvista/setup-headless-display-action@main
        with:
          qt: true
      - name: Install package
        run: |
          python -m pip install --progress-bar off --upgrade pip setuptools wheel
          python -m pip install --progress-bar off .[test]
      - name: Display system information
        run: demo-sys_info --developer
      - name: Run pytest
        run: pytest demo_realtime --cov=demo_realtime --cov-report=xml --cov-config=pyproject.toml
      - name: Upload to codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: unittests  # optional
          name: codecov-umbrella  # optional
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true  # optional (default = false)

  pytest-pip-pre:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
    name: pip pre-release - py${{ matrix.python-version }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install liblsl
        run: |
          curl -L https://github.com/sccn/liblsl/releases/download/v1.16.2/liblsl-1.16.2-jammy_amd64.deb -o liblsl-1.16.2-jammy_amd64.deb
          sudo apt update
          sudo apt install -y libpugixml-dev qtbase5-dev qt5-qmake
          sudo apt install -y ./liblsl-1.16.2-jammy_amd64.deb
      - name: Setup headless display
        uses: pyvista/setup-headless-display-action@main
        with:
          qt: true
      - name: Install dependencies
        run: |
          python -m pip install --progress-bar off --upgrade pip setuptools
          python -m pip install --progress-bar off .[test]
          python -m pip uninstall -y tensorflow
          python -m pip install --progress-bar off --upgrade git+https://github.com/mne-tools/mne-python
          python -m pip install matplotlib
          python -m pip install --progress-bar off --upgrade --no-deps --pre --only-binary :all: -i https://pypi.anaconda.org/scientific-python-nightly-wheels/simple --timeout=180 matplotlib
          python -m pip install --progress-bar off --upgrade --pre --only-binary :all: -i https://pypi.anaconda.org/scientific-python-nightly-wheels/simple --timeout=180 numpy scipy
      - name: Display system information
        run: demo-sys_info --developer
      - name: Run pytest
        run: pytest demo_realtime --cov=demo_realtime --cov-report=xml --cov-config=pyproject.toml
      - name: Upload to codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: unittests  # optional
          name: codecov-umbrella  # optional
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true  # optional (default = false)

  pytest-psychopy:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    name: pip psychopy - py${{ matrix.python-version }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install liblsl
        run: |
          curl -L https://github.com/sccn/liblsl/releases/download/v1.16.2/liblsl-1.16.2-jammy_amd64.deb -o liblsl-1.16.2-jammy_amd64.deb
          sudo apt update
          sudo apt install -y libpugixml-dev qtbase5-dev qt5-qmake
          sudo apt install -y ./liblsl-1.16.2-jammy_amd64.deb
      - name: Setup headless display
        uses: pyvista/setup-headless-display-action@main
        with:
          qt: true
      - name: Install dependencies
        run: |
          python -m pip install --progress-bar off --upgrade pip setuptools
          python -m pip install --progress-bar off .[test]
          readonly wx_name="wxPython-4.2.1-cp310-cp310-linux_x86_64.whl"
          curl https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-22.04/${wx_name} -o ${wx_name}
          python -m pip install --progress-bar off ${wx_name}
          python -m pip install --progress-bar off psychopy psychtoolbox
      - name: Display system information
        run: demo-sys_info --developer
      - name: Run pytest
        run: pytest demo_realtime/visuals/tests/test_double_spinning_wheel.py --cov=demo_realtime/visuals --cov-report=xml --cov-config=pyproject.toml
      - name: Upload to codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: unittests-psychopy  # optional
          name: codecov-umbrella  # optional
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true  # optional (default = false)
